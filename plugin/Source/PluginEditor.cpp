/*
  ==============================================================================

    This file was auto-generated by the Introjucer!

    It contains the basic startup code for a Juce application.

  ==============================================================================
*/

#include "PluginProcessor.h"
#include "PluginEditor.h"
#include "system_compressor_wrapper_proc.h"

typedef RadiumCompressorAudioProcessor Patch;

// These five functions are called from the custom GUI.

static void  set_compressor_automation_start(RadiumCompressorAudioProcessor *processor, int num){
  processor->beginParameterChangeGesture(num);
}

static void  set_compressor_automation_end(RadiumCompressorAudioProcessor *processor, int num){
  processor->endParameterChangeGesture(num);
}

static void set_compressor_parameter(RadiumCompressorAudioProcessor *processor, int num,float value){
  COMPRESSOR_set_parameter(processor->wrapper,num,value);
  processor->setParameterNotifyingHost(num,processor->getParameter(num));
}

static float get_compressor_parameter(RadiumCompressorAudioProcessor *processor, int num){
  return COMPRESSOR_get_parameter(processor->wrapper,num);
}

static float get_graph_value(RadiumCompressorAudioProcessor *processor, int num){
  return COMPRESSOR_get_graph_value(processor->wrapper,num);
}


//namespace radium_compressor{

#include "Radium_Compressor.cpp"

//}



//==============================================================================
RadiumCompressorAudioProcessorEditor::RadiumCompressorAudioProcessorEditor (RadiumCompressorAudioProcessor* ownerFilter)
    : AudioProcessorEditor (ownerFilter)
{
  look_and_feel = new OldSchoolLookAndFeel();
  LookAndFeel::setDefaultLookAndFeel(look_and_feel);


  radium_compressor = new Radium_Compressor(ownerFilter);
  addAndMakeVisible(radium_compressor);

  radium_compressor->comp->set_gui_parameters();
  radium_compressor->comp->update();
  
  int width = radium_compressor->getRealWidth();
  int height = radium_compressor->getRealHeight();

  // This is where our plugin's editor size is set.
  setSize (width, height);

  radium_compressor->setBounds (0,0,width,height);
}

RadiumCompressorAudioProcessorEditor::~RadiumCompressorAudioProcessorEditor()
{
  delete radium_compressor;
  delete look_and_feel;
}


void RadiumCompressorAudioProcessorEditor::update_gui(){
  radium_compressor->comp->mark_gui_parameters_as_dirty();
}

#if BUILD_DEMO
void RadiumCompressorAudioProcessorEditor::show_demo_text(bool doit){
  radium_compressor->show_demo_text = doit;
  radium_compressor->comp->mark_gui_parameters_as_dirty();
}
#endif

#if 1
//==============================================================================
void RadiumCompressorAudioProcessorEditor::paint (Graphics& g)
{
#if 0
    g.fillAll (Colours::white);
    g.setColour (Colours::black);
    g.setFont (15.0f);
    g.drawFittedText ("Hello World!",
                      0, 0, getWidth(), getHeight(),
                      Justification::centred, 1);
#endif
}
#endif



